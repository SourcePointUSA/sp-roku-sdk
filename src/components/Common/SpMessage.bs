sub init()
    m.top.observeField("changeView", "changeView")
    m.top.observeField("message", "showMessage")
end sub

sub changeView(event as object)
    showView(event.getData())
end sub

function onKeyEvent(key as String, press as Boolean) as Boolean
    if key = "back" and press = true then
        if m.currentView <> invalid and m.currentView.id <> "HomeView" then
            showView("HomeView")
        end if
        return true
    end if 
end function

sub showMessage(event as Object)
    messageCategoryMap = {
        "1": "Gdpr",
        "2": "Ccpa"
    }

    m.message = event.getData()

    if m.message.messageMetadata <> invalid and type(m.message.messageMetadata.categoryId) = "roInt" then
        m.messageCategory = messageCategoryMap[m.message.messageMetadata.categoryId.ToStr()]

        showView("HomeView")
    else
        m.top.done = true
        m.top.error = "Invalid message JSON"
    endif
end sub

sub showView(view as String)
    viewMap = {
        "HomeView": "HomeView",
        "CategoriesView": "CategoriesView",
        "PrivacyPolicyView": "PrivacyPolicyView",
        "VendorsView": "VendorsView"
    }

    if m.currentView <> invalid then
        m.top.removeChild(m.currentView)
        m.currentView = invalid
    end if 

    viewObject = getViewObject(view)
    if viewObject <> invalid then
        viewComponent = CreateObject("roSGNode", viewMap[view] + m.messageCategory)
        viewComponent.id = viewMap[view]
        viewComponent.message = m.message.message
        viewComponent.messageMetadata = m.message.messageMetadata
        viewComponent.view = viewObject

        m.currentView = viewComponent
        m.top.appendChild(viewComponent)
        viewComponent.setFocus(true)
    else
        m.top.done = true
        m.top.error = "Invalid message JSON"
    end if
end sub

function getViewObject(view as String) as Object
    for each component in m.message.message.message_json.components
        if component.id = view
            return component
        end if
    end for

    return invalid
end function