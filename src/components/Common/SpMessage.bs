sub init()
    m.top.observeField("message", "showMessage")
end sub

sub showMessage(event as Object)
    messageCategoryMap = {
        "1": "Gdpr",
        "2": "Ccpa"
    }

    message = event.getData()

    if message.messageMetadata <> invalid and type(message.messageMetadata.categoryId) = "roInt" then
        m.messageCategory = messageCategoryMap[message.messageMetadata.categoryId.ToStr()]

        showView("HomeView")
    else
        m.top.done = true
        m.top.error = "Invalid message JSON"
    endif
end sub

sub showView(view as String)
    viewMap = {
        "HomeView": "HomeView",
        "PrivacyPolicyView": "PrivacyPolicyView"
    }

    viewObject = getViewObject(view)
    if viewObject <> invalid then
        viewComponent = CreateObject("roSGNode", viewMap[view] + m.messageCategory)
        viewComponent.view = viewObject
        m.top.appendChild(viewComponent)
        viewComponent.setFocus(true)
    else
        m.top.done = true
        m.top.error = "Invalid message JSON"
    end if
end sub

function getViewObject(view as String) as Object
    for each component in m.top.message.message.message_json.components
        if component.id = view
            return component
        end if
    end for

    return invalid
end function