import "pkg:/source/sourcepoint-sdk/Helpers.bs"

sub init()
    m.top.observeField("buttonFocused", "onFocus")
    m.top.observeField("itemContent", "render")

    m.button_background = m.top.findNode("button_background")
    m.button_label = m.top.findNode("button_label")
end sub

sub render(event as Object)
    content = event.getData()
    settings = content.settings

    m.top.id = content.id

    ' defaults
    if content.focused = true then
        m.textColor = "0x000000FF"
        m.button_label.fontUri="font:BoldSystemFontFile"
    else
        m.textColor = "0xFFFFFFFF"
        m.button_label.fontUri="font:SystemFontFile"
    end if

    if settings.style <> invalid and settings.style <> invalid then
        if settings.style.font <> invalid then
            if settings.style.font.fontSize <> invalid then
                m.button_label.fontSize = settings.style.font.fontSize
            end if
        end if
        if content.focused = true and settings.style.onFocusTextColor <> invalid then
            m.textColor = colorConvert(settings.style.onFocusTextColor)
        else if content.focused = false and settings.style.onUnfocusTextColor <> invalid then
            m.textColor = colorConvert(settings.style.onUnfocusTextColor)
        end if
        ' if settings.style.onFocusBackgroundColor <> invalid then
        '     m.focusBackgroundColor = colorConvert(settings.style.onFocusBackgroundColor)
        ' end if
        ' if settings.style.onUnfocusBackgroundColor <> invalid then
        '     m.unFocusBackgroundColor = colorConvert(settings.style.onUnfocusBackgroundColor)
        ' end if
    end if

    m.button_label.color = m.textColor
    m.button_label.translation = [0, content.height / 2]
    m.button_label.text = settings.text
end sub

sub onFocus(event as Object)
    focus = event.getData()

    if focus = true then
        m.button_label.color = m.focusedTextColor
    else
        m.button_label.color = m.textColor
    end if
end sub