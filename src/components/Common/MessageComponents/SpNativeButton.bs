import "pkg:/source/sourcepoint-sdk/Helpers.bs"

sub init()
    ' reset default look and feel
    m.top.iconUri = ""
    m.top.focusedIconUri = ""
    m.top.focusBitmapUri = "pkg:/images/sourcepoint-sdk/focus_button.jpg"          ' note space here, empty string is the default and does not override...
    m.top.focusFootprintBitmapUri = "pkg:/images/sourcepoint-sdk/focus_footprint_button.jpg"
    m.top.showFocusFootprint = true
    m.top.observeField("settings", "render")
    m.top.observeField("width", "setWidths")

    ' TODO: add our defaults
    m.focusBackgroundColor = "0xFFFFFFFF"
    m.unFocusBackgroundColor = "0xFFFFFFFF"
    m.focusedTextColor = "0x000000FF"
    m.textColor = "0x000000FF"
end sub

sub render(event as Object)
    settings = event.getData()

    m.top.text = settings.text

    if settings.style <> invalid and settings.style <> invalid then
        if settings.style.onFocusTextColor <> invalid then
            m.focusedTextColor = colorConvert(settings.style.onFocusTextColor)
        end if
        if settings.style.onUnfocusTextColor <> invalid then
            m.textColor = colorConvert(settings.style.onUnfocusTextColor)
        end if
        if settings.style.onFocusBackgroundColor <> invalid then
            m.focusBackgroundColor = colorConvert(settings.style.onFocusBackgroundColor)
        end if
        if settings.style.onUnfocusBackgroundColor <> invalid then
            m.unFocusBackgroundColor = colorConvert(settings.style.onUnfocusBackgroundColor)
        end if
    end if

    if settings.style.font <> invalid then
        m.top.textFont = createFont(settings.style.font)
        focusedTextSettings = {}
        focusedTextSettings.append(settings.style.font)
        focusedTextSettings.append({fontWeight: "700"})
        m.top.focusedTextFont = createFont(focusedTextSettings)
    end if

    m.top.textColor = m.textColor
    m.top.focusedTextColor = m.focusedTextColor

    ' blend focus button color
    children = m.top.getChildren(-1, 0)
    print "children:"
    for each child in children
        if child.subtype() = "Poster" then
            if child.uri.Instr("focus_button.jpg") >= 0 then
                ' this turns our button the right color in focus
                child.blendColor = m.focusBackgroundColor
            else if child.uri.Instr("focus_footprint_button.jpg") >= 0 then
                ' this turns our footprint the right color 
                child.blendColor = "0xA9A9A9FF" ' default disabled color
            end if
        end if
    end for

    createBg()

    m.top.backgroundRect.uri = "pkg:/images/sourcepoint-sdk/unfocus_button.jpg"
    m.top.backgroundRect.blendColor = m.unFocusBackgroundColor
    m.top.backgroundRect.height = scalePixelDimension(64)
    m.top.backgroundRect.width = 0
end sub

sub createBg()
    if m.top.backgroundRect = invalid then
        ' create regular background image
        bg = createObject("roSGNode", "Poster")
        m.top.backgroundRect = bg
        m.top.insertChild(bg, 0)
    end if
end sub

sub setWidths(event as Object)
    width = event.getData()
    if m.top.backgroundRect <> invalid then
        m.top.backgroundRect.width = width
    end if
end sub