sub init()
    ' pass
end sub

function _makeRequest(url, method as String, body = {} as Object, retry = true as Boolean) as Object
    request = createObject("roUrlTransfer")
    request.SetCertificatesFile("common:/certs/ca-bundle.crt")
    request.AddHeader("X-Roku-Reserved-Dev-Id", "")
    request.InitClientCertificates()
    request.RetainBodyOnError(true)
    request.SetUrl(url)

    if UCase(method) = "GET" then
        response = request.getToString()
    else if UCase(method) = "POST" then
        request.addHeader("Content-Type", "application/json")
        port = createObject("roMessagePort")
        request.setPort(port)
        request.asyncPostFromString(FormatJson(body))
        response = port.waitMessage(10 * 1000)
    end if 

    responseBody = invalid

    try
        responseBody = ParseJson(response)
    catch error
        print "Invalid JSON response"
        return invalid
    end try

    if response.GetResponseCode() = 200 then
        return responseBody
    else if response.GetResponseCode() = 500 and retry = true then
        ' sleep for 2 seconds and retry if we hit a 500
        Sleep(2 * 1000)
        return _makeRequest(url, method, body, false)
    else if responseBody <> invalid
        print "Request failed with error:"
        print responseBody
        print response.GetFailureReason()
        return invalid
    else
        print "Request failed with no response body"
        print response.GetFailureReason()
        return invalid
    end if
end function

sub makeRequest(url, method, body)
    response = _makeRequest(url, method, body)

    if response = invalid then
        ' if we errored, reset consent and localstate
        m.top.userConsent = invalid
        m.top.localState = invalid
    else
        ' parse and set user consent
        userConsent = {}
        for each c in response.campaigns
            if c.userConsent <> invalid then
                userConsent[c.type] = c.userConsent
            end if
        end for

        m.top.localState = response.localState
        m.top.userConsent = userConsent
    endif
end sub