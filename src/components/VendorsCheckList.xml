<?xml version = "1.0" encoding = "utf-8" ?>

<!--********** Copyright 2016 Roku Corp.  All Rights Reserved. **********-->

<component name = "VendorsCheckList" extends = "ListPanel" >

  <interface >
    <field id = "vendorsString" type = "string" />
  </interface>

  <script type = "text/brightscript" >

    <![CDATA[

    sub init()
      m.top.panelSize = "medium"
      m.top.focusable = true
      m.top.hasNextPanel = false
      m.top.leftOnly = true
      m.top.createNextPanelOnItemFocus = false
      m.top.selectButtonMovesPanelForward = false

      m.top.list = m.top.findNode("vendorsCheckList")
      fetchVendors()
    end sub

    sub fetchVendors()
      m.readVendorsReaderTask = createObject("roSGNode", "VendorsReader")
      m.readVendorsReaderTask.observeField("vendors", "fetchUserConsent")
      m.readVendorsReaderTask.control = "RUN"
    end sub

    sub fetchUserConsent()
      m.top.list.content = m.readVendorsReaderTask.vendors
      m.readUserConsentData = createObject("roSGNode", "UserConsentReader")
      m.readUserConsentData.observeField("userconsentData", "fetchPMData")
      m.readUserConsentData.control = "RUN"
    end sub

    sub fetchPMData()
      m.readPrivacyManagerContentTask = createObject("roSGNode", "PrivacyManagerDataReader")
      m.readPrivacyManagerContentTask.observeField("privacyManagerData", "setVendorsCheckList")
      m.readPrivacyManagerContentTask.control = "RUN"
    end sub

    sub setVendorsCheckList()
      userConsentData = ParseJSON(m.readUserConsentData.userConsentData)
      privacyManagerData = ParseJSON(m.readPrivacyManagerContentTask.privacyManagerData)
      userVendorMap = createObject("roAssociativeArray")
      numOfChildren = m.readVendorsReaderTask.vendors.getChildCount()
      newCheckedState = createObject("roArray", numOfChildren, false)
      if userConsentData.DoesExist("hasConsentData")
        if privacyManagerData.defaultOptedIn
          for i = 0 to numOfChildren - 1
            newCheckedState.SetEntry(i, true)
          end for
        end if
      else 
        for each vendor in userConsentData.vendors
          userVendorMap.AddReplace(vendor, true)
        end for
        for i = 0 to numOfChildren - 1
          userContentNode = m.readVendorsReaderTask.vendors.getChild(i)
          if userVendorMap.DoesExist(userContentNode.id)
            newCheckedState.SetEntry(i, true)
          else 
            newCheckedState.SetEntry(i, false)
          end if
        end for
      end if
      m.top.list.checkedState = newCheckedState
    end sub

    function onKeyEvent(key as String,press as Boolean) as Boolean
      if press then 
        if key = "options"
          vendorsString = ""
          for i = 0 to m.top.list.content.getChildCount() - 1
            checkedState = m.top.list.checkedState.getEntry(i)
            if checkedState
              vendorsString = vendorsString + Chr(34) + m.top.list.content.getChild(i).id + Chr(34) + ","
            end if
          end for
          vendorsStringLength = Len(vendorsString)
          vendorsString = Left(vendorsString, vendorsStringLength - 1)
          vendorsString = "[" + vendorsString + "]"
          vendorsString = Chr(34) + "vendors" + Chr(34) + ":" + vendorsString
          m.top.vendorsString = vendorsString
        end if
      end if
      return false
    end function
    ]]>

  </script>

    <children>
      <Label 
        text = "Press * to Save"
        id = "saveLabel" 
        translation = "[5, 5]"
        font = "font:MediumBoldSystemFont" 
        />
      <CheckList 
        id = "vendorsCheckList" />
        
    </children>

</component>