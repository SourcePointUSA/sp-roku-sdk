sub init()
    m.top.observeField("view", "renderView")
    m.top.observeField("privacyManagerViewData", "renderRightCol")
end sub

sub observeCategoryList(event as Object)
    item = m.categoryList.content.getChild(event.getData())

    changeView("CategoryDetailsView", m.top.privacyManagerViewData.categories[item.id])
end sub

sub renderRightCol()
    buttons = []
    for each categoryId in m.top.privacyManagerViewData.categories
        buttonSettings = { 
            ' on: m.top.privacyManagerViewData.categories[categoryId].enabled
            settings: {} 
        } 
        buttonSettings.settings.append(m.components.button_category.settings)
        buttonSettings.id = categoryId
        buttonSettings.settings.text = m.top.privacyManagerViewData.categories[categoryId].name

        buttons.push(buttonSettings)
    end for

    if m.categoryList = invalid then
        m.categoryList = createObject("roSGNode", "SpButtonList")
        m.categoryList.width = m.colRightWidth

        m.colRight.appendChild(m.categoryList)
        m.rightColFocus = m.categoryList
        m.categoryList.observeField("itemSelected", "observeCategoryList")
    end if 

    m.categoryList.buttonComponents = buttons
end sub

sub renderView(event as Object)
    getPrivacyManagerViewData(2)
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")

    view = event.getData()
    mapComponents(view)

    renderLogo()
    renderNav([])

    ' TODO add loader to the right col until it is rendered

    setFocus(m.back_button)
end sub