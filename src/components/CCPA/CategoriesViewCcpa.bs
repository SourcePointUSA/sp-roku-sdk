sub init()
    m.componentIdMap = {
        "LogoImage": "image_logo",
        "SaveButton": "save_and_exit",
    }
    m.navViewMap = {
        "save_and_exit": "HomeView",
    }

    m.categories = {}
    m.vendors = {}
    
    getPrivacyManagerViewData(renderRightCol)
    m.top.observeField("view", "renderView")
end sub

sub renderRightCol()
    labelList = createObject("roSGNode", "LabelList")
    rootContentNode = createObject("roSGNode", "ContentNode")

    for each categoryId in m.privacyManagerViewData.categories
        contentNode = createObject("roSGNode", "ContentNode")
        contentNode.id = categoryId
        contentNode.title = m.privacyManagerViewData.categories[categoryId].name
        print contentNode
        rootContentNode.appendChild(contentNode)
    endfor

    labelList.content = rootContentNode

    m.colRight.appendChild(labelList)
    m.rightColFocus = labelList
    ' m.nav = buttonGroup
    ' m.nav.observeField("buttonSelected", "observeNav")
end sub

sub renderView(event as Object)
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")

    view = event.getData()
    mapComponents(view)

    renderLogo()
    renderNav(["save_and_exit"])

    ' TODO add loader to the right col until it is rendered

    m.nav.setFocus(true)
end sub