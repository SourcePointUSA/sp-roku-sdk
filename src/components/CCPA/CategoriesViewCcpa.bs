import "pkg:/source/sourcepoint-sdk/Helpers.bs"

sub init()
    m.componentIdMap = {
        "LogoImage": "image_logo",
        "SaveButton": "save_and_exit",
    }
    m.navViewMap = {
        "save_and_exit": "HomeView",
    }

    m.categories = {}
    m.vendors = {}
    
    getPrivacyManagerViewData()
    m.top.observeField("view", "renderView")
end sub

' TODO cache responses 
sub getPrivacyManagerViewData()
    m.privacyManagerViewTask = createObject("roSGNode", "PrivacyManagerView")
    m.privacyManagerViewTask.messageCategory = 2
    m.privacyManagerViewTask.propertyId = m.global.config.propertyId
    m.privacyManagerViewTask.control = "RUN"
    m.privacyManagerViewTask.observeField("state", "setCategoryData")
end sub

sub renderRightCol()
    buttonGroup = createObject("roSGNode", "ButtonGroup")

    for each categoryId in m.categories
        button = createObject("roSGNode", "Button")
        button.id = categoryId
        button.text = m.categories[categoryId].name
        buttonGroup.appendChild(button)
    endfor

    m.colRight.appendChild(buttonGroup)
    m.rightColFocus = buttonGroup
    ' m.nav = buttonGroup
    ' m.nav.observeField("buttonSelected", "observeNav")
end sub

sub renderView(event as Object)
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")

    view = event.getData()
    mapComponents(view)

    renderLogo()
    renderNav(["save_and_exit"])

    ' TODO add loader to the right col until it is rendered

    m.nav.setFocus(true)
end sub

sub setCategoryData(event as Object)
    eventStatus = event.getData()

    if eventStatus = "stop" or eventStatus = "done" then
        for each category in m.privacyManagerViewTask.categories
            m.categories[category._id] = category
        end for

        m.vendors = m.privacyManagerViewTask.vendors

        renderRightCol()
    end if
end sub