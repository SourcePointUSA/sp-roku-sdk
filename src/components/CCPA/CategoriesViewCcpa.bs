sub init()
    m.navViewMap = {
        "save_and_exit": "HomeView",
    }
    
    m.top.observeField("view", "renderView")
end sub

sub observeCategoryList(event as Object)
    'CategoryDetailsView
    item = m.categoryList.content.getChild(event.getData())

    changeView("CategoryDetailsView", m.privacyManagerViewData.categories[item.id])
end sub

sub renderRightCol()
    m.categoryList = createObject("roSGNode", "LabelList")
    rootContentNode = createObject("roSGNode", "ContentNode")

    for each categoryId in m.privacyManagerViewData.categories
        contentNode = createObject("roSGNode", "ContentNode")
        contentNode.id = categoryId
        contentNode.title = m.privacyManagerViewData.categories[categoryId].name
        rootContentNode.appendChild(contentNode)
    endfor

    m.categoryList.content = rootContentNode

    m.colRight.appendChild(m.categoryList)
    m.rightColFocus = m.categoryList
    m.categoryList.observeField("itemSelected", "observeCategoryList")
end sub

sub renderView(event as Object)
    getPrivacyManagerViewData(renderRightCol, 2)
    
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")

    view = event.getData()
    mapComponents(view)

    renderLogo()
    renderNav(["save_and_exit"])

    ' TODO add loader to the right col until it is rendered

    m.nav.setFocus(true)
end sub