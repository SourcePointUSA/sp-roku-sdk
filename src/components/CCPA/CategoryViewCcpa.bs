sub init()
    m.top.observeField("view", "renderView")
    m.top.observeField("viewDataExtra", "renderRightCol")
    m.navButtons = ["button_on", "button_off"]
end sub

sub observeNav(event as Object)
    selectedButton = m.nav.getChild(event.getData())

    if selectedButton.id = "button_on" then
        m.top.userConsentNode.acceptCategory = m.categoryData._id
    else if selectedButton.id = "button_off" then
        m.top.userConsentNode.rejectCategory = m.categoryData._id
    end if 

    changeView("_go_back_")
end sub

sub renderRightCol(event as Object)
    m.categoryData = event.getData()

    for i = 0 to m.navButtons.count() step 1 
        if (m.categoryData.__enabled = true and m.navButtons[i] = "button_on") or (m.categoryData.__enabled = false and m.navButtons[i] = "button_off") then
            m.nav.focusButton = i
            exit for
        end if
    end for

    m.nav.setFocus(true)

    m.top.findNode("screen-title").text = m.categoryData.name

    if m.top.vendorType = invalid or m.top.vendorType = "" or m.top.vendorType = "consent" then
        vendors = m.categoryData.requiringConsentVendors
    else 
        vendors = m.categoryData.legIntVendors
    end if

    m.vendorList = createObject("roSGNode", "LabelList")
    rootContentNode = createObject("roSGNode", "ContentNode")

    for each vendor in vendors
        contentNode = createObject("roSGNode", "ContentNode")
        contentNode.id = vendor._id
        contentNode.title = vendor.name
        rootContentNode.appendChild(contentNode)
    endfor

    m.vendorList.content = rootContentNode

    m.colRight.appendChild(m.vendorList)
    m.rightColFocus = m.vendorList
end sub

sub renderView(event as Object)
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")

    view = event.getData()
    mapComponents(view)

    renderLogo()
    renderNav(m.navButtons)

    ' TODO add loader to the right col until it is rendered
end sub