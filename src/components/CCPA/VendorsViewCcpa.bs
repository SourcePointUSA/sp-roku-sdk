sub init()
    m.componentIdMap = {
        "AcceptAllButton" : "accept_all",
        "HeaderText": "text_header",
        "LogoImage": "image_logo",
        "SaveButton": "save_and_exit",
    }
    m.navViewMap = {
        "accept_all": "HomeView",
        "save_and_exit": "HomeView",
    }

    getPrivacyManagerViewData(renderRightCol)
    m.top.observeField("view", "renderView")
end sub

sub observeVendorList(event as Object)
    item = m.vendorList.content.getChild(event.getData())

    changeView("VendorDetails", m.privacyManagerViewData.vendors[item.id])
end sub

sub renderRightCol()
    m.vendorList = createObject("roSGNode", "LabelList")
    rootContentNode = createObject("roSGNode", "ContentNode")

    for each vendorId in m.privacyManagerViewData.vendors
        contentNode = createObject("roSGNode", "ContentNode")
        contentNode.id = vendorId
        contentNode.title = m.privacyManagerViewData.vendors[vendorId].name
        rootContentNode.appendChild(contentNode)
    endfor

    m.vendorList.content = rootContentNode

    m.colRight.appendChild(m.vendorList)
    m.rightColFocus = m.vendorList
    m.vendorList.observeField("itemSelected", "observeVendorList")
end sub

sub renderView(event as Object)
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")

    view = event.getData()
    mapComponents(view)

    renderLogo()
    renderNav(["accept_all", "save_and_exit"])

    ' TODO add loader to the right col until it is rendered

    m.nav.setFocus(true)
end sub