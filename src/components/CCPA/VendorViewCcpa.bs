sub init()
    m.top.observeField("viewDataExtra", "renderView")
end sub

sub observeNav(event as Object)
    selectedButton = m.nav.getChild(event.getData())

    if selectedButton.id = "button_on" then
        m.top.userConsentNode.acceptVendor = m.vendorData._id
    else if selectedButton.id = "button_off" then
        m.top.userConsentNode.rejectVendor = m.vendorData._id
    end if 

    changeView("_go_back_")
end sub

sub renderRightCol()
    m.top.findNode("screen-title").text = m.vendorData.name

    m.categoryList = createObject("roSGNode", "LabelList")
    rootContentNode = createObject("roSGNode", "ContentNode")

    for each purpose in m.vendorData.purposes
        contentNode = createObject("roSGNode", "ContentNode")
        contentNode.title = purpose
        rootContentNode.appendChild(contentNode)
    endfor

    m.categoryList.content = rootContentNode

    m.colRight.appendChild(m.categoryList)
end sub

sub renderView(event as Object)
    m.colLeft = m.top.findNode("col-left")
    m.colRight = m.top.findNode("col-right")
    
    view = m.top.view
    mapComponents(view)

    renderLogo()
    renderNav(["button_on", "button_off"])

    ' TODO add loader to the right col until it is rendered

    m.nav.setFocus(true)

    m.vendorData = event.getData()

    renderRightCol()
end sub