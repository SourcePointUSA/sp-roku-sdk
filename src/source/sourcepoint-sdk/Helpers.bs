function addQueryParams(uri as String, params as Object) as String
    separator = uri.Instr(0, "?") < 0 ? "?" : "&"

    for each k in params
        if params[k] <> invalid
            uri = uri + separator + k + "=" + params[k].ToStr().Escape()
            separator = "&"
        end if
    end for

    return uri
end function

function createFont(fontSettings as Object) as Object
    font = CreateObject("roSGNode", "Font")

    if fontSettings.fontWeight <> invalid and fontSettings.fontWeight = "700" then
        font.uri = "font:BoldSystemFontFile"
    else
        font.uri = "font:SystemFontFile"
    end if

    if fontSettings.fontSize <> invalid then
        font.size = fontSettings.fontSize
    else
        font.size = 14
    end if

    return font
end function

' Convert html hex to roku hex
function colorConvert(color as String) as String
    if color <> invalid then
        return color.replace("#", "0x") + "FF"
    end if

    return color
end function

function getLocalState() as String
    registry = CreateObject("roRegistrySection", "SourcepointSdk")
    if registry.Exists("localState") then
        return registry.read("localState")
    end if

    return ""
end function

sub setLocalState(localState)
    registry = CreateObject("roRegistrySection", "SourcepointSdk")

    if localState = invalid then
        localState = ""
    end if

    registry.write("localState", localState)
    registry.flush()
end sub

function getUuid(legislation) as String
    localState = getLocalState()

    if localState <> "" then
        localState = ParseJson(localState)

        if localState[legislation] <> invalid and localState[legislation].uuid <> invalid then
            return localState[legislation].uuid
        end if
    end if 

    return ""
end function

sub scalePixelDimensions(node as object, scaleMap as Object)
    resolutionInfo = m.top.getScene().currentDesignResolution

    for each nodeId in scaleMap
        updateNode = node.findNode(nodeId)
        if updateNode <> invalid
            if type(scaleMap[nodeId]) = "roFunction"
                dims = scaleMap[nodeId](updateNode, resolutionInfo.width, resolutionInfo.height)
            else
                dims = scaleMap[nodeId]
            end if

            for i = 0 to (dims.count() - 1) step 1
                if dims[i] <> invalid and dims[i] > 0 then
                    dims[i] = scalePixelDimension(dims[i], resolutionInfo)
                end if
            end for
            
            if dims[0] <> invalid and dims[1] <> invalid then
                updateNode.translation = [dims[0], dims[1]]
            end if 

            if dims[2] <> invalid then
                updateNode.width = dims[2]
            end if
            if dims[3] <> invalid then
                updateNode.height = dims[3]
            end if
        end if
    end for
end sub

function scalePixelDimension(value as Float, resolutionInfo = invalid as Object) as Float
    if resolutionInfo = invalid then
        resolutionInfo = m.top.getScene().currentDesignResolution
    end if

    if resolutionInfo.resolution = "FHD"
        return value * 1.5
    end if

    return value
end function