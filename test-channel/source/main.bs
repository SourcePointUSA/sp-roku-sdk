'********** Copyright 2016 Roku Corp.  All Rights Reserved. **********

sub Main()
  showChannelSGScreen()
end sub

sub showChannelSGScreen()
  screen = CreateObject("roSGScreen")
  m.port = CreateObject("roMessagePort")
  screen.setMessagePort(m.port)

  scene = screen.CreateScene("Home")
  screen.show()

  accountId = 22
  propertyHref = "https://roku.dan.sourcepoint.com"

  scene.custom_config = {accountId: accountId, propertyHref: propertyHref}

  scene.observeField("run_campaign_logic", m.port)
  scene.observeField("run_ccpa", m.port)
  scene.observeField("run_gdpr", m.port)
  scene.observeField("open_pm", m.port)
  scene.observeField("custom_config", m.port)
  scene.observeField("clear_data", m.port)

  ' legislation configs
  ccpaConfig = {}
  gdprConfig = {}

  m.spSdk = new SourcepointSdk(accountId, propertyHref, {"ccpa": ccpaConfig, "gdpr": gdprConfig}, {}, false)

  while(true)
    msg = wait(0, m.port)
    msgType = type(msg)

    if msgType = "roSGScreenEvent"
      if msg.isScreenClosed() then return
    else if msgType = "roSGNodeEvent" then
      field = msg.getField()
      if field = "open_pm" then
        ' m.spSdk.openPrivacyManager("ccpa", 15995)
        ' m.spSdk.openPrivacyManager("gdpr", 16020)
      else if field = "run_campaign_logic" then
        runCampaign({"ccpa": ccpaConfig, "gdpr": gdprConfig})
      else if field = "run_gdpr" then
        runCampaign({"gdpr": gdprConfig})
      else if field = "run_ccpa" then
        runCampaign({"ccpa": ccpaConfig})
      else if field = "clear_data" then
        m.spSdk.clearUserConsent()
      else if field = "custom_config" then
        data = msg.getData()
        m.spSdk = new SourcepointSdk(data.accountId.toInt(), data.propertyHref, {"ccpa": {}, "gdpr": {}}, {}, false)
      end if
    end if
  end while

end sub

sub runCampaign(legislations = invalid as Object)
  consent = m.spSdk.runCampaignLogic(legislations)

  print "errors: "
  print m.spSdk.getErrors()

  print "consent object: "
  print FormatJson(consent)
end sub
